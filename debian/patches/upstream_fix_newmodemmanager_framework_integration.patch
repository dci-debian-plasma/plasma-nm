From: Jan Grulich <jgrulich@redhat.com>
Date: Tue, 31 Mar 2015 12:37:16 +0000
Subject: Adapt to modemmanager-qt API changes
X-Git-Url: http://quickgit.kde.org/?p=plasma-nm.git&a=commitdiff&h=4d72cb7966edda33bc72c77fc2a126844fc1f134
---
Adapt to modemmanager-qt API changes
---


--- a/libs/models/networkmodel.cpp
+++ b/libs/models/networkmodel.cpp
@@ -246,10 +246,10 @@
             if (modem->hasInterface(ModemManager::ModemDevice::ModemInterface)) {
                 ModemManager::Modem::Ptr modemNetwork = modem->interface(ModemManager::ModemDevice::ModemInterface).objectCast<ModemManager::Modem>();
                 if (modemNetwork) {
-                    connect(modemNetwork.data(), SIGNAL(signalQualityChanged(uint)),
-                            SLOT(gsmNetworkSignalQualityChanged(uint)), Qt::UniqueConnection);
-                    connect(modemNetwork.data(), SIGNAL(accessTechnologyChanged(ModemManager::Modem::AccessTechnologies)),
-                            SLOT(gsmNetworkAccessTechnologyChanged(ModemManager::Modem::AccessTechnologies)), Qt::UniqueConnection);
+                    connect(modemNetwork.data(), SIGNAL(signalQualityChanged(ModemManager::SignalQualityPair)),
+                            SLOT(gsmNetworkSignalQualityChanged(ModemManager::SignalQualityPair)), Qt::UniqueConnection);
+                    connect(modemNetwork.data(), SIGNAL(accessTechnologiesChanged(QFlags<MMModemAccessTechnology>)),
+                            SLOT(gsmNetworkAccessTechnologiesChanged(QFlags<MMModemAccessTechnology>)), Qt::UniqueConnection);
                     connect(modemNetwork.data(), SIGNAL(currentModesChanged()),
                             SLOT(gsmNetworkCurrentModesChanged()), Qt::UniqueConnection);
                 }
@@ -847,9 +847,9 @@
 }
 
 #if WITH_MODEMMANAGER_SUPPORT
-void NetworkModel::gsmNetworkAccessTechnologyChanged(ModemManager::Modem::AccessTechnologies technology)
-{
-    Q_UNUSED(technology);
+void NetworkModel::gsmNetworkAccessTechnologiesChanged(QFlags<MMModemAccessTechnology> accessTechnologies)
+{
+    Q_UNUSED(accessTechnologies);
     ModemManager::Modem * gsmNetwork = qobject_cast<ModemManager::Modem*>(sender());
     if (gsmNetwork) {
         Q_FOREACH (const NetworkManager::Device::Ptr & dev, NetworkManager::networkInterfaces()) {
@@ -893,7 +893,7 @@
     }
 }
 
-void NetworkModel::gsmNetworkSignalQualityChanged(uint signal)
+void NetworkModel::gsmNetworkSignalQualityChanged(const ModemManager::SignalQualityPair &signalQuality)
 {
     ModemManager::Modem * gsmNetwork = qobject_cast<ModemManager::Modem*>(sender());
     if (gsmNetwork) {
@@ -905,7 +905,7 @@
                         ModemManager::Modem::Ptr modemNetwork = modem->interface(ModemManager::ModemDevice::ModemInterface).objectCast<ModemManager::Modem>();
                         if (modemNetwork && modemNetwork->device() == gsmNetwork->device()) {
                             Q_FOREACH (NetworkModelItem * item, m_list.returnItems(NetworkItemsList::Device, dev->uni())) {
-                                item->setSignal(signal);
+                                item->setSignal(signalQuality.signal);
                                 updateItem(item);
                             }
                         }

--- a/libs/models/networkmodel.h
+++ b/libs/models/networkmodel.h
@@ -94,9 +94,9 @@
     void deviceRemoved(const QString& device);
     void deviceStateChanged(NetworkManager::Device::State state, NetworkManager::Device::State oldState, NetworkManager::Device::StateChangeReason reason);
 #if WITH_MODEMMANAGER_SUPPORT
-    void gsmNetworkAccessTechnologyChanged(ModemManager::Modem::AccessTechnologies technology);
+    void gsmNetworkAccessTechnologiesChanged(QFlags<MMModemAccessTechnology> accessTechnologies);
     void gsmNetworkCurrentModesChanged();
-    void gsmNetworkSignalQualityChanged(uint signal);
+    void gsmNetworkSignalQualityChanged(const ModemManager::SignalQualityPair &signalQuality);
 #endif
     void ipConfigChanged();
     void ipInterfaceChanged();

